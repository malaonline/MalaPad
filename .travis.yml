language: android        # 声明构建语言环境
jdk: oraclejdk8          # 下载jdk8

#sudo: false              # 开启基于容器的Travis CI任务，让编译效率更高。
sudo: required            # Sudo-enabled  7.5G内存

android:
  components:            # 配置信息
    - platform-tools
    - tools
  # The BuildTools version used by your project
    - build-tools-25.0.2
  # The SDK version used to compile your project
  # - android-22
    - android-25
  # Additional components
    - extra-google-google_play_services
    - extra-google-m2repository
    - addon-google_apis-google-21
    - extra-android-m2repository     # Android Support Repository
    - extra-android-support          # Support Library
  # - sys-img-armeabi-v7a-android-22
  # - extra-android-m2repository


before_install:    #解密私密文件签名文件等(这里主要解密keystore和gradl)
 #- openssl aes-256-cbc -K $encrypted_566122ccfbf2_key -iv $encrypted_566122ccfbf2_iv -in secrets.tar.enc -out secrets.tar -d
 #- tar xvf secrets.tar
 #- openssl aes-256-cbc -K $encrypted_566122ccfbf2_key -iv $encrypted_566122ccfbf2_iv -in secrets.tar.enc -out secrets.tar -d   #解密私密文件签名文件等(这里主要解密keystore和gradle.properties)
 #- tar xvf secrets.tar
 - chmod +x gradlew          # 改变gradlew的访问权限
 - gem install fir-cli       # 安装fir.im


#before_script:
  # Create and start emulator
  #- echo no | android create avd --force -n test -t android-22 --abi armeabi-v7a
  #- emulator -avd test -no-skin -no-audio -no-window &
  #- android-wait-for-emulator
  #- adb shell input keyevent 82 &


script:                   # 编译任务
  - ./gradlew assembleRelease
#  - ./gradlew assemblePrdrelease
#  - ./gradlew assembleStagerelease
#script: ./buildbot.sh    # 运行编译脚本与上面的2选一


before_deploy:       # 部署之前
  # 使用 mv 命令进行修改apk文件的名字
#  - mv app/build/outputs/apk/app-release-unsigned.apk app/build/outputs/apk/app-pad-devrelease.apk
  - mv app/build/outputs/apk/app-release-unsigned.apk app/build/outputs/apk/app-pad-prdrelease.apk
#  - mv app/build/outputs/apk/app-release-unsigned.apk app/build/outputs/apk/app-pad-stagerelease.apk


deploy:                             # 部署到GitHub Release
  provider: releases                # 部署到GitHub Release，除此之外，Travis CI还支持发布到fir.im、AWS、Google App Engine等
  api_key:                          # 填写GitHub的token （Settings -> Personal access tokens -> Generate new token）
    secure: $GITHUB_TOKENS
  file:
#     - app/build/outputs/apk/app-pad-devrelease.apk   # 部署文件路径
     - app/build/outputs/apk/app-pad-prdrelease.apk     # 部署文件路径
#     - app/build/outputs/apk/app-pad-stagerelease.apk # 部署文件路径
  skip_cleanup: true                # 设置为true以跳过清理,不然apk文件就会被清理
  on:                               # 发布时机
    tags: true                     # tags设置为true表示只有在有tag的情况下才部署
#    #all_branches: true


after_deploy:                       # 部署到fir.im
# - fir p app/build/outputs/apk/app-pad-devrelease.apk -T $FIR_TOKENS -c "`git cat-file tag $TRAVIS_TAG`"
 - fir p app/build/outputs/apk/app-pad-prdrelease.apk -T $FIR_TOKENS -c "`git cat-file tag $TRAVIS_TAG`"
# - fir p app/build/outputs/apk/app-pad-stagerelease.apk -T $FIR_TOKENS -c "`git cat-file tag $TRAVIS_TAG`"



notifications:                      # 通知
  email:
    recipients:
      - zhoukang@malalaoshi.com
    on_success: change
    on_failure: always
  slack:
    secure: EK+JOAeBKbefUsr5kdjyRk/bKa3myID3rDOYm23bMKL4+CSPReIdwM329eVnYXQA9m9Wm7/l1WzRy9HiteK/PIqNi0pi68dbnKOIUym3TkXSRDJOi3JiNuT7rf9ezLpUieIeWu3Q7mZeWn3Wg4wuH5PT3yBINEqla1pinOrRNfqniTEq7CGMpxlJaWdWdlyAAwbkyTgT7L5rsf1URbqvVcAWwVe0qjH7YtPTIq1vjaGiMsC4ey1OVHe57vjNv/DntrpHWyjCjgpMxCbMXcTniyWhxXqrUR1HHjkLMT8cydSgJw8mRFWdnrW4Odey4Uv1YiBiWg0Pw8ss4oOb3LRybO3mynACv5XhvypmvTRrwzMa7zQuFCD0saOqGn6Aa/Ky0B1PwXSlbdQi+ewq+OqGzWgcMCZBewJqcCLxiDu4ZOB7wJdGdtX9fvDGaMocoBLvrY/juHwh3p7ZBT/mBpmcF/YPOYHynj2zL+WqDuKovdL1IvEPlnaLqTe+APqm3+AUDXBCdLSlCCfblUuFqOJPuD24hjBl5SrS4GCpU/2LKccCSzrHocZ9DFjgxxlXmk1BJGolNTBNVArpl2US2A3mNkTyvbgZ63JW8zXLz0/XXv/+kOG0n55oS0p8ZvwegqmcsCH9p9KWGNUN+NDU5tIwFuYAOB6lLKQ4wVo3EbR/5Y4=
